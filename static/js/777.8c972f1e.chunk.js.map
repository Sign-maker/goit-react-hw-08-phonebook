{"version":3,"file":"static/js/777.8c972f1e.chunk.js","mappings":"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","sources":["redux-store/contacts/contactsSelectors.js","redux-store/filter/filterSelectors.js","redux-store/compoundSelectors.js","hooks/useContacts.js","hooks/useFilter.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = store => store.contacts.items;\nexport const selectIsLoading = store => store.contacts.isLoading;\n","export const selectFilter = store => store.filter.filterQuery;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from './contacts/contactsSelectors';\nimport { selectFilter } from './filter/filterSelectors';\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) => {\n    const filterToLowercase = filterValue.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filterToLowercase)\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectIsLoading,\n} from 'redux-store/contacts/contactsSelectors';\nimport * as operations from 'redux-store/contacts/contactsOperations';\nimport { useCallback } from 'react';\nimport { selectFilteredContacts } from 'redux-store/compoundSelectors';\n\nexport const useContacts = () => {\n  const dispatch = useDispatch();\n\n  const fetchContacts = useCallback(\n    () => dispatch(operations.fetchContacts()),\n    [dispatch]\n  );\n  const addContact = contact =>\n    dispatch(operations.addContact(contact)).unwrap();\n  const deleteContact = id => dispatch(operations.deleteContact(id)).unwrap();\n\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return {\n    fetchContacts,\n    addContact,\n    deleteContact,\n    isLoading,\n    contacts,\n    filteredContacts,\n  };\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux-store/filter/filterSelectors';\nimport * as actions from 'redux-store/filter/filterSlice';\n\nexport const useFilter = () => {\n  const dispatch = useDispatch();\n\n  const filterValue = useSelector(selectFilter);\n  const setFilter = filterQuery => dispatch(actions.setFilter(filterQuery));\n\n  return { filterValue, setFilter };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"ContactForm_section__Yogoh\",\"title\":\"ContactForm_title__jZguf\",\"form\":\"ContactForm_form__dhl+T\"};","import { useState } from 'react';\nimport { useContacts } from 'hooks/useContacts';\nimport { useFilter } from 'hooks/useFilter';\n\nimport { Button, Form, Input, message } from 'antd';\nimport {\n  UserOutlined,\n  PhoneOutlined,\n  UserAddOutlined,\n} from '@ant-design/icons';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const [adding, setAdding] = useState(false);\n  const [antForm] = Form.useForm();\n\n  const { contacts, addContact } = useContacts();\n  const { setFilter } = useFilter();\n\n  const isInContacts = newName => {\n    const newNameToLowerCase = newName.toLowerCase();\n\n    return contacts.some(\n      ({ name }) => name.toLowerCase() === newNameToLowerCase\n    );\n  };\n\n  const onSubmitHandler = async ({ name, number }) => {\n    const contactData = { name: name.trimEnd(), number: number.trimEnd() };\n\n    if (isInContacts(contactData.name)) {\n      return message.error(`${contactData.name} is in contacts!`);\n    }\n\n    try {\n      setAdding(true);\n      await addContact(contactData);\n      message.success(`Contact ${name} added`);\n      antForm.resetFields();\n      setFilter('');\n    } catch (error) {\n      message.error(`Unable to add contact! ${error}`);\n    } finally {\n      setAdding(false);\n    }\n  };\n\n  return (\n    <Form\n      form={antForm}\n      name=\"Contact\"\n      autoComplete=\"off\"\n      onFinish={onSubmitHandler}\n      layout=\"vertical\"\n      className={css.form}\n    >\n      <Form.Item\n        label=\"Name\"\n        name=\"name\"\n        rules={[\n          { required: true, message: 'Please input contact name!' },\n          { min: 3, message: 'Min lenght=3' },\n        ]}\n      >\n        <Input prefix={<UserOutlined />} placeholder=\"Vasyl Smith\" />\n      </Form.Item>\n      <Form.Item\n        label=\"Number\"\n        name=\"number\"\n        rules={[{ required: true, message: 'Please input phone number!' }]}\n      >\n        <Input\n          type=\"tel\"\n          prefix={<PhoneOutlined />}\n          placeholder=\"38999999999\"\n        />\n      </Form.Item>\n      <Form.Item>\n        <Button\n          type=\"primary\"\n          icon={<UserAddOutlined />}\n          loading={adding}\n          htmlType=\"submit\"\n          block\n        >\n          AddContact\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n","import { useState } from 'react';\nimport { useContacts } from 'hooks/useContacts';\n\nimport { Button, Card, List, Popconfirm, message } from 'antd';\nimport { DeleteOutlined } from '@ant-design/icons';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const { deleteContact } = useContacts();\n  const [deleting, setDeleting] = useState(false);\n\n  const handleClick = async () => {\n    try {\n      setDeleting(true);\n      await deleteContact(id);\n      message.success(`Contact ${name} deleted`);\n    } catch (error) {\n      message.error(`Unable to delete! ${error}`);\n    } finally {\n      setDeleting(false);\n    }\n  };\n\n  return (\n    <List.Item>\n      <Card\n        actions={[\n          <Popconfirm\n            title=\"Delete the contact\"\n            description=\"Are you sure to delete this contact?\"\n            onConfirm={handleClick}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              icon={<DeleteOutlined />}\n              loading={deleting}\n            ></Button>\n          </Popconfirm>,\n        ]}\n      >\n        <Card.Meta title={name} description={number}></Card.Meta>\n      </Card>\n    </List.Item>\n  );\n};\n","import { useEffect } from 'react';\nimport { useContacts } from 'hooks/useContacts';\n\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { Empty, List, Spin } from 'antd';\n\nexport const ContactList = () => {\n  const { fetchContacts, filteredContacts, isLoading } = useContacts();\n\n  useEffect(() => {\n    fetchContacts();\n  }, [fetchContacts]);\n\n  return (\n    <>\n      {isLoading && (\n        <Spin tip=\"Loading\" size=\"large\">\n          <div></div>\n        </Spin>\n      )}\n      {filteredContacts.length > 0 && (\n        <List\n          grid={{\n            gutter: 16,\n            xs: 1,\n            sm: 2,\n            md: 3,\n            lg: 4,\n            xl: 4,\n            xxl: 3,\n          }}\n          dataSource={filteredContacts}\n          renderItem={({ id, name, number }) => (\n            <ContactItem key={id} id={id} name={name} number={number} />\n          )}\n        ></List>\n      )}\n      {!isLoading && !filteredContacts.length && <Empty />}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Filter_form__wVnxJ\"};","import { useEffect } from 'react';\nimport { useFilter } from 'hooks/useFilter';\n\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Form, Input } from 'antd';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const { filterValue, setFilter } = useFilter();\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    form.setFieldsValue({\n      filter: filterValue,\n    });\n  }, [filterValue, form]);\n\n  const handleChange = event => {\n    const value = event.target.value.trimStart();\n    setFilter(value);\n  };\n\n  return (\n    <Form\n      form={form}\n      name=\"Filter\"\n      autoComplete=\"off\"\n      layout=\"vertical\"\n      className={css.form}\n    >\n      <Form.Item label=\"Search\" name=\"filter\">\n        <Input prefix={<SearchOutlined />} onChange={handleChange} />\n      </Form.Item>\n    </Form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Contacts_section__JEEdl\",\"title\":\"Contacts_title__LxdN4\"};","import React from 'react';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Typography } from 'antd';\nimport css from './Contacts.module.css';\n\nconst { Title } = Typography;\n\nconst Contacts = () => {\n  return (\n    <section className={css.section}>\n      <div className=\"container\">\n        <Title className={css.title}>Phonebook</Title>\n        <ContactForm />\n        <Title level={2} className={css.title}>\n          Contacts\n        </Title>\n        <Filter />\n        <ContactList />\n      </div>\n    </section>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","store","contacts","items","selectIsLoading","isLoading","selectFilter","filter","filterQuery","selectFilteredContacts","createSelector","filterValue","filterToLowercase","toLowerCase","_ref","name","includes","useContacts","dispatch","useDispatch","fetchContacts","useCallback","operations","addContact","contact","unwrap","deleteContact","id","useSelector","filteredContacts","useFilter","setFilter","actions","ContactForm","_useState","useState","_useState2","_slicedToArray","adding","setAdding","_Form$useForm","Form","antForm","_useContacts","isInContacts","newName","newNameToLowerCase","some","onSubmitHandler","_ref3","_asyncToGenerator","_regeneratorRuntime","_callee","_ref2","number","contactData","_context","prev","next","trimEnd","abrupt","message","concat","resetFields","t0","finish","stop","_x","apply","arguments","_jsxs","form","autoComplete","onFinish","layout","className","css","children","_jsx","label","rules","required","min","Input","prefix","UserOutlined","placeholder","type","PhoneOutlined","Button","icon","UserAddOutlined","loading","htmlType","block","ContactItem","deleting","setDeleting","handleClick","List","Card","Popconfirm","title","description","onConfirm","okText","cancelText","DeleteOutlined","ContactList","useEffect","_Fragment","Spin","tip","size","length","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","Empty","Filter","_useFilter","setFieldsValue","SearchOutlined","onChange","event","value","target","trimStart","Title","Typography","level"],"sourceRoot":""}